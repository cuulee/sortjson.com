{"version":3,"sources":["components/layout/Content.tsx","AppTheme.tsx","AppProvider.tsx","components/layout/Header.tsx","components/layout/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["jsonAbc","require","styles","theme","createStyles","Pane","margin","padding","spacing","unit","Content","props","_this","Object","_home_florian_git_sortjson_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_florian_git_sortjson_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_florian_git_sortjson_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","formatJSON","object","JSON","parse","state","input","sorted","sortObj","setState","output","stringify","outputInfo","formatObject","eval","concat","error","formatText","split","sort","a","b","localeCompare","filter","Boolean","join","handleInput","event","currentTarget","value","name","age","inputInfo","classes","react__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","container","item","xs","sm","className","variant","component","fullWidth","helperText","multiline","onChange","placeholder","rows","rowsMax","Infinity","style","InputLabelProps","shrink","disabled","React","withStyles","AppTheme","react","AppContext","Consumer","context","core_styles","createMuiTheme","palette","type","typography","useNextVariants","index_es","children","localStorage","getItem","setItem","action","switchTheme","AppProvider","classCallCheck","possibleConstructorReturn","getPrototypeOf","getTheme","_this2","Provider","setTheme","Header","inDarkMode","AppBarWrapper","color","position","row","Title","DarkModeControl","control","checked","label","href","mdi_material_ui_index_es","flexGrow","userSelect","lineHeight","paddingLeft","Footer","align","Imprint","gutterBottom","process","marginTop","App","AppProvider_AppProvider","src_AppTheme","layout_Header","layout_Footer","window","location","hostname","match","ReactDOM","render","react_default","createElement","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52f82d01.chunk.js","sourcesContent":["import {Grid, Paper, TextField, Theme, Typography, WithStyles, createStyles, withStyles} from '@material-ui/core';\nimport * as React from 'react';\n\nconst jsonAbc = require('jsonabc');\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    Pane: {\n      margin: '20px',\n      padding: theme.spacing.unit * 2,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  input: string;\n  inputInfo: string;\n  output: string;\n  outputInfo: string;\n}\n\nclass Content extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      input: JSON.stringify({name: 'Sophie', age: 50}, null, 2),\n      inputInfo: 'Please paste your unformatted JSON here.',\n      output: '',\n      outputInfo: '',\n    };\n  }\n\n  formatJSON = () => {\n    const object = JSON.parse(this.state.input);\n    const sorted = jsonAbc.sortObj(object);\n    this.setState({\n      output: JSON.stringify(sorted, null, 2),\n      outputInfo: 'Formatted and sorted JSON result.',\n    });\n  };\n\n  formatObject = () => {\n    try {\n      if (this.state.input) {\n        const input = eval(`JSON.stringify(${this.state.input})`);\n        this.setState({input}, this.formatJSON);\n      } else {\n        this.setState({output: ''});\n      }\n    } catch (error) {\n      this.formatText();\n    }\n  };\n\n  formatText = () => {\n    const output = this.state.input\n      .split('\\n')\n      .sort((a, b) => a.localeCompare(b))\n      .filter(Boolean)\n      .join('\\n');\n    this.setState({output, outputInfo: `No valid JSON import. Treated input as text when sorting it.`});\n  };\n\n  handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({input: event.currentTarget.value}, this.formatObject);\n  };\n\n  componentDidMount() {\n    this.formatJSON();\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.Pane}>\n            <Typography variant=\"h5\" component=\"h3\">\n              Input\n            </Typography>\n            <TextField\n              fullWidth\n              helperText={this.state.inputInfo}\n              multiline={true}\n              onChange={this.handleInput}\n              placeholder={this.state.input}\n              rows={4}\n              rowsMax={Infinity}\n              style={{margin: 8}}\n              variant=\"filled\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.Pane}>\n            <Typography variant=\"h5\" component=\"h3\">\n              Output\n            </Typography>\n            <TextField\n              disabled\n              fullWidth\n              helperText={this.state.outputInfo}\n              multiline={true}\n              rows={4}\n              rowsMax={Infinity}\n              style={{margin: 8}}\n              value={this.state.output}\n              variant=\"filled\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Content);\n","import {CssBaseline, MuiThemeProvider, PaletteType, createMuiTheme} from '@material-ui/core';\nimport * as React from 'react';\nimport {AppContext} from './AppProvider';\n\nclass AppTheme extends React.Component {\n  static getTheme(): PaletteType {\n    if (typeof localStorage !== 'undefined') {\n      const theme = localStorage.getItem('theme');\n      return theme === 'light' ? 'light' : 'dark';\n    } else {\n      return 'light';\n    }\n  }\n\n  static setTheme(name: PaletteType) {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem('theme', name);\n    }\n  }\n\n  render() {\n    return (\n      <AppContext.Consumer>\n        {context => (\n          <MuiThemeProvider\n            theme={createMuiTheme({\n              palette: {\n                type: context.state.theme,\n              },\n              typography: {\n                useNextVariants: true,\n              },\n            })}\n          >\n            <CssBaseline />\n            {this.props.children}\n          </MuiThemeProvider>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n\nexport default AppTheme;\n","import {PaletteType} from '@material-ui/core';\nimport * as React from 'react';\nimport AppTheme from './AppTheme';\n\ninterface Context {\n  action: {\n    switchTheme: (name: PaletteType) => void;\n  };\n  state: State;\n}\n\nconst AppContext = React.createContext<Context>({\n  action: {\n    switchTheme: (name: PaletteType) => {},\n  },\n  state: {\n    theme: 'light',\n  },\n});\n\ninterface Props {}\n\ninterface State {\n  theme: PaletteType;\n}\n\nclass AppProvider extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      theme: AppTheme.getTheme(),\n    };\n  }\n\n  render() {\n    return (\n      <AppContext.Provider\n        value={{\n          action: {\n            switchTheme: (name: PaletteType) =>\n              this.setState(\n                {\n                  theme: name,\n                },\n                () => {\n                  AppTheme.setTheme(this.state.theme);\n                }\n              ),\n          },\n          state: this.state,\n        }}\n      >\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport {AppContext, AppProvider};\n","import {\n  AppBar,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  IconButton,\n  Switch,\n  Theme,\n  Typography,\n  WithStyles,\n  createStyles,\n  withStyles,\n} from '@material-ui/core';\nimport {GithubCircle} from 'mdi-material-ui';\nimport * as React from 'react';\nimport {AppContext} from '../../AppProvider';\nimport AppTheme from '../../AppTheme';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    AppBarWrapper: {\n      flexGrow: 1,\n    },\n    DarkModeControl: {\n      userSelect: 'none',\n    },\n    Title: {\n      flexGrow: 1,\n      lineHeight: '48px',\n      paddingLeft: '20px',\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  inDarkMode: boolean;\n}\n\nclass Header extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      inDarkMode: AppTheme.getTheme() === 'dark',\n    };\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <AppContext.Consumer>\n        {context => (\n          <div className={classes.AppBarWrapper}>\n            <AppBar color=\"default\" position=\"static\">\n              <FormControl>\n                <FormGroup row>\n                  <Typography className={classes.Title} color=\"inherit\" variant=\"h5\">\n                    Sort JSON\n                  </Typography>\n                  <FormControlLabel\n                    className={classes.DarkModeControl}\n                    control={\n                      <Switch\n                        color=\"primary\"\n                        checked={this.state.inDarkMode}\n                        onChange={() => {\n                          this.setState(\n                            {\n                              inDarkMode: !this.state.inDarkMode,\n                            },\n                            () => {\n                              if (this.state.inDarkMode) {\n                                context.action.switchTheme('dark');\n                              } else {\n                                context.action.switchTheme('light');\n                              }\n                            }\n                          );\n                        }}\n                        value=\"inDarkMode\"\n                      />\n                    }\n                    label=\"Dark Mode\"\n                  />\n                  <IconButton color=\"inherit\" href=\"https://github.com/ffflorian/sortjson.com\">\n                    <GithubCircle />\n                  </IconButton>\n                </FormGroup>\n              </FormControl>\n            </AppBar>\n          </div>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n\nexport default withStyles(styles)(Header);\n","import {Theme, Typography, WithStyles, createStyles, withStyles} from '@material-ui/core';\nimport * as React from 'react';\n\nconst version = process.env.REACT_APP_VERSION || '';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    Imprint: {\n      marginTop: '10px',\n      paddingLeft: '20px',\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\ninterface State {}\n\nclass Footer extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <Typography align=\"left\" className={classes.Imprint} gutterBottom={true}>\n        {`Version ${version}`}\n      </Typography>\n    );\n  }\n}\n\nexport default withStyles(styles)(Footer);\n","import * as React from 'react';\nimport {AppProvider} from './AppProvider';\nimport AppTheme from './AppTheme';\nimport {Content, Footer, Header} from './components/layout/';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <AppProvider>\n        <AppTheme>\n          <Header />\n          <Content />\n          <Footer />\n        </AppTheme>\n      </AppProvider>\n    );\n  }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as {env: {[key: string]: string}}).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}